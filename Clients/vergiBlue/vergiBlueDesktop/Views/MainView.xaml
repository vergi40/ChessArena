<Window
    x:Class="vergiBlueDesktop.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:vergiBlueDesktop.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views1="clr-namespace:vergiBlueDesktop.Views"
    Width="1000"
    Height="900"
    d:DataContext="{d:DesignInstance {x:Type local:MainViewModel}}"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="Button">
                <Setter Property="Width" Value="80" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Margin" Value="3" />
            </Style>
            <local:InvertableBooleanToVisibilityConverter x:Key="boolToVis" />
            <local:InverseBooleanConverter x:Key="inverseBool" />
        </ResourceDictionary>
    </Window.Resources>

    <StackPanel Orientation="Vertical">

        <StackPanel Orientation="Horizontal">
            <!--  Main game setup controls  -->
            <WrapPanel IsEnabled="{Binding IsBusy, Converter={StaticResource inverseBool}}">
                <Button Command="{Binding Test1Command}" Content="2Rook test" />
                <Button Command="{Binding Test2Command}" Content="Promotion test" />
                <Button Command="{Binding Test3Command}" Content="Castling test" />
                <Button Command="{Binding SandboxCommand}" Content="Sandbox" />
                <Button Command="{Binding FenCommand}" Content="Load FEN" />
            </WrapPanel>
            <Expander Margin="3">
                <StackPanel Orientation="Vertical">
                    <Label Content="Ai logic settings before game start" />
                    <CheckBox Content="Use full diagnostics" IsChecked="{Binding AiLogicSettings.UseFullDiagnostics, Mode=TwoWay}" />
                    <!--<CheckBox Content="Use parallel computation" IsChecked="{Binding AiLogicSettings.UseParallelComputation, Mode=TwoWay}"></CheckBox>-->

                    <CheckBox
                        Margin="0,5,0,0"
                        Content="Use iterative deepening"
                        IsChecked="{Binding AiLogicSettings.UseIterativeDeepening, Mode=TwoWay}" />
                    <StackPanel IsEnabled="{Binding AiLogicSettings.UseIterativeDeepening}" Orientation="Horizontal">
                        <Label Content="Time limit for opponent move calculation (ms)" />
                        <TextBox
                            MinWidth="40"
                            VerticalContentAlignment="Center"
                            Text="{Binding AiLogicSettings.TranspositionTimeLimitInMs}" />
                    </StackPanel>

                    <CheckBox
                        Margin="0,5,0,0"
                        Content="Use transposition tables"
                        IsChecked="{Binding AiLogicSettings.UseTranspositionTables, Mode=TwoWay}" />
                    <StackPanel IsEnabled="{Binding AiLogicSettings.UseTranspositionTables}" Orientation="Horizontal">
                        <Label Content="Transposition save data clearing frequency" />
                        <TextBox
                            MinWidth="40"
                            VerticalContentAlignment="Center"
                            Text="{Binding AiLogicSettings.ClearSavedTranspositionsAfterTurnsPassed}" />
                    </StackPanel>
                </StackPanel>
            </Expander>

        </StackPanel>



        <StackPanel Orientation="Horizontal">

            <!--  Rolling move history, diagnostics  -->
            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                <StackPanel
                    Width="320"
                    Margin="10"
                    Orientation="Vertical">
                    <GroupBox Header="History">
                        <ListBox Height="200" ItemsSource="{Binding History}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </GroupBox>
                    <GroupBox Header="AI diagnostics">
                        <StackPanel Orientation="Vertical">
                            <Label Content="Current move" />
                            <ListBox MinHeight="100" ItemsSource="{Binding AiMoveDiagnostics}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <Label Margin="0,20,0,0" Content="Previous move" />
                            <ListBox MinHeight="100" ItemsSource="{Binding AiPreviousMoveDiagnostics}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </ScrollViewer>


            <!--  In-game controls and board  -->
            <DockPanel Height="600" VerticalAlignment="Top">
                <Button
                    Width="200"
                    Height="40"
                    Background="#222222"
                    Command="{Binding StartBlackCommand}"
                    Content="Start as black"
                    DockPanel.Dock="Top"
                    Foreground="White"
                    Visibility="{Binding GameStarted, Converter={StaticResource boolToVis}, ConverterParameter=InvertedHidden}" />
                <Button
                    Width="200"
                    Height="40"
                    Background="White"
                    Command="{Binding StartWhiteCommand}"
                    Content="Start as white"
                    DockPanel.Dock="Bottom"
                    Foreground="Black"
                    Visibility="{Binding GameStarted, Converter={StaticResource boolToVis}, ConverterParameter=Inverted}" />
                <Button
                    Width="200"
                    Height="40"
                    Command="{Binding ForfeitCommand}"
                    Content="Forfeit"
                    DockPanel.Dock="Bottom"
                    IsEnabled="{Binding IsBusy, Converter={StaticResource inverseBool}}"
                    Visibility="{Binding GameStarted, Converter={StaticResource boolToVis}}" />

                <Border
                    Width="500"
                    Height="500"
                    BorderBrush="#362400"
                    BorderThickness="0,0,10,10"
                    CornerRadius="3">
                    <Border
                        Background="Transparent"
                        BorderBrush="#5c3e00"
                        BorderThickness="10,10,0,0"
                        CornerRadius="2">
                        <Grid>
                            <!--  Background  -->
                            <Canvas x:Name="BoardTileBackground" />

                            <!--  Visualize previous move. For now juts copied list logic  -->
                            <ItemsControl ItemsSource="{Binding PreviousPosition}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="Canvas.Left" Value="{Binding UiX}" />
                                        <Setter Property="Canvas.Bottom" Value="{Binding UiY}" />
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border
                                            Width="50"
                                            Height="50"
                                            Margin="5,5,5,5"
                                            Background="Transparent"
                                            BorderBrush="Azure"
                                            BorderThickness="3" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <!--  Visualize allowed moves  -->
                            <ItemsControl ItemsSource="{Binding VisualizationTiles}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="Canvas.Left" Value="{Binding UiX}" />
                                        <Setter Property="Canvas.Bottom" Value="{Binding UiY}" />
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border
                                            Width="50"
                                            Height="50"
                                            Margin="5,5,5,5"
                                            Background="Transparent"
                                            BorderBrush="{Binding BorderColor}"
                                            BorderThickness="3" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <!--  Chess pieces  -->
                            <ItemsControl ItemsSource="{Binding ViewObjectList}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <views1:DraggableItem />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Border>

                </Border>
            </DockPanel>
            <Grid>
                <!--  Buttons on board right side  -->
                <ToggleButton
                    Width="100"
                    Height="60"
                    Margin="3,250,3,320"
                    Command="{Binding ToggleBlackAttackCommand}">
                    <TextBlock
                        Text="Show black attack squares"
                        TextAlignment="Center"
                        TextWrapping="Wrap" />
                </ToggleButton>
                <ToggleButton
                    Width="100"
                    Height="60"
                    Margin="3,326,3,244"
                    Command="{Binding ToggleWhiteAttackCommand}">
                    <TextBlock
                        Text="Show white attack squares"
                        TextAlignment="Center"
                        TextWrapping="Wrap" />
                </ToggleButton>
            </Grid>

        </StackPanel>

    </StackPanel>
</Window>
